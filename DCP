#!/bin/bash
# prep dcp drive with fdisk
# 20100825


clear
echo -e "$(tput setaf 3)|-->    DCP drive prep utility    <--|$(tput sgr0)"
echo -e "$(tput setaf 6)-----\t-----\t-----\t-----\t-----$(tput sgr0)"

sharepoint="/media/dcpdrives"
echo -e "defaults:"
echo -e "filesystem spec:\t\text2 journaled with inode set @ 128."
echo -e "mountpoint post-format:\t\t${sharepoint}/<disk-bay>-<disk>"
echo -e "permissions post-mount:\t\tread and write for all."
echo -e "$(tput setaf 6)-----\t-----\t-----\t-----\t-----$(tput sgr0)"
echo -e "$(tput setaf 3)|-->  disks connected to this computer    $(tput sgr0)"
printf "%-8s %-11s %s\n" "        " "Disk" "Capacity"
printf "%-8s %-11s %s\n" "        " "----" "--------"
sudo fdisk -l 2>/dev/null | awk '/Disk/ { print }' | awk '/bytes/ { print }' | sed 's/dev//g' | sed 's/[/,:]*//g'| awk '/sd/ { printf "%-8s %-11s %s %s\n", "|-->    ", $2, $3, $4 }' 
btvl=`sudo df -h | awk '/boot/ { print $1 }' | sed 's/[0-9]//g' | sed 's/\///g' | sed 's/dev//g'`
raidvol=`sudo df -h | awk '/RAID/ { print $1 }' | sed 's/[0-9]//g' | sed 's/\///g' | sed 's/dev//g'`
echo -e "\n$(tput setaf 3)|-->  mount status   $(tput sgr0)"
printf "%-8s %-15s %s\n" "        " "Partition" "Mounted at"
printf "%-8s %-15s %s\n" "        " "----" "--------"
sudo df -h | grep -e sd[abcd] | awk '{ printf "%-8s %-11s %s %s\n", "|-->    ", $1,"   ", $6 }'
echo -e "$(tput setaf 6)-----\t-----\t-----\t-----\t-----$(tput sgr0)"

echo -e -n "\nwhich disk do you want to format? (enter sda, sdb, etc... ): "
read device


if [ "$device" == "$btvl" ]
	then
	echo -e "\nHey Man!  I told you not to use the boot disk!"
	sleep 3
	echo -e "exiting script.\n"
	sleep 3
	exit 
fi


if [ "$device" == "$raidvol" ]
	then
	echo -e "\nHEY!  That's the RAID! I don't think we should format that disk... exiting script\n"
	sleep 3
	exit 
fi
fmtdv=`echo -e "/dev/$device"`
chkfdsk=`sudo fdisk -l 2>/dev/null | grep $fmtdv`


echo -e "\nchecking to make sure your entry is valid..."
sleep 3
if [ "$chkfdsk" == "" ]
	then echo -e "no matching disk found, exiting script.\n"
	exit
else
	echo -e "found a match, proceeding to next step." 
	echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
fi


echo -e "checking mount status..."
sleep 3 
cd ~
DSK=`sudo df -h | grep $device | awk  '{ print $1 }'`
MNTD=`sudo df -h | grep $device | awk  '{ print $1 }' | sed 's/dev//g' | sed 's/\///g' | sed 's/[0-9]//g'`

if [ "$MNTD" == "$device" ]
	then echo -e "the disk you entered is mounted, I'll unmount it for you..."
	sudo umount $DSK
	DSKCK=`sudo df -h | grep $device | awk  '{ print $1 }'`
	if [ "$DSKCK" == "" ]; then 
		echo -e "$DSK has been unmounted."
	fi
else
	echo -e "the disk you entered is not mounted, time to format!"
fi


echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
sleep 3

echo -e "$(tput setaf 3)$(tput smul)Formatting will destroy all data on this disk!$(tput rmul)\n" 
echo -e -n "$(tput setaf 3)Press (y) to begin, any other key to exit: "
read confirm
if [ "$confirm" != "y" ]
	then 
	echo -e "$(tput sgr0)bye.."
	exit 
fi
echo -e "\n\n$(tput setaf 3)formatting disk...\n\n"
sleep 3
(echo c; echo u; echo d; echo n; echo p; echo 1; echo ; echo ; echo w) | sudo fdisk $fmtdv 2>/dev/null
wait
echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
echo -e "$(tput setaf 2)disk $fmtdv has been formatted"
echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
echo -e -n "Time to make a filesystem.  Enter a label for new disk: "
read label
echo -e "\n\n$(tput setaf 3)Making Filesystem..."
sleep 5
echo -e -n "\n"
fst=`echo "${fmtdv}1"`
sudo mkfs.ext4 -L $label $fst
wait
echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
echo -e "$(tput setaf 2)Done making filesystem." 
echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"

echo -e -n "Select disk: (a) or (b): "
read TRAY

mountpoint="$sharepoint/$TRAY"
sudo mkdir -p $mountpoint
#semanage fcontext -a -t samba_share_t '$mountpoint(/.*)?'
#restorecon -R /mnt/dcp
sudo mount $fst $mountpoint
sudo chmod -R a+rw $mountpoint
sudo chown -R root:$USER $mountpoint
echo -e "$(tput setaf 3)mounting $fst at $mountpoint"
wait
echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
proof=`sudo df -h | grep $fst | awk '"/$mountpoint/ " { print $6 }'`
if [ "${proof}" == "${mountpoint}" ]; then
	echo -e "$(tput setaf 2)Your new dcp drive is mounted!!"
else
	echo -e "$(tput setaf 1)can't confirm mount, check fdisk to make sure device is still attached."
	echo -e "if so, mount the disk manually."
	echo -e "exiting script.$(tput sgr0)"
	exit 1
fi
echo -e "$(tput setaf 6)\n-----\t-----\t-----\t-----\t-----\n$(tput sgr0)"
echo -e -n "$(tput setaf 2)\nall done. press any key to exit...$(tput sgr0) "
read -n 1
df -h
echo -e "\nbye...\n"
exit 
